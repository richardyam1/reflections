Q: How did viewing a diff between two versions of a file help you see the bug that was introduced?

A: This allows you to see what has changed from the old version to the new version.  By comparing the two, you can more easily see what change could have caused the bug


Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

A:  Having an older version available can help a person debug the newer version.  If necessary, they can revert back to the old version


Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

A: 
Pros:  
1. Choosing when to save can make the history log less cluttered  
2. Won't automatically save a non-working code

Cons:
1.  It's possible to forget to create a commit.


Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

A:  In Git, the files can be linked together so that a change in one file can affect the others.  Google docs has no way of knowing if multiple files are linked to one another.  


Q: How can you use the commands git log and git diff to view the history of files?

A:  You use git log to see the pervious changes along with the comments made.  You use git diff to compare what has changed from the previous versions.  


Q: How might using version control make you more confident to make changes that could break something?

A:  Version control saves an older version of your code.  So it the change breaks something, you have something you can fall back on.  


Q: Now that you have your workspace set up, what do you want to try using Git for?

A: To help me with my coding.  